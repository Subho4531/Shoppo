<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
  </head>
  <body class=" flex justify-center p-10">
   
     <form enctype="multipart/form-data" class="max-w-md mx-auto bg-white p-6 rounded-lg shadow-lg">

  <div class="mb-6">
    <label for="productImage" class="block text-sm font-medium text-gray-700 mb-2">
      Product Image
    </label>
    
   
    <div class="relative">
      <input 
        type="file" 
        id="productImage" 
        name="productImage"
        accept="image/*"
        class="hidden"
        onchange="previewImage(this)"
      />
      <label 
        for="productImage" 
        class="flex flex-col items-center justify-center w-full h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100 transition-colors duration-200"
      >
        <div class="flex flex-col items-center justify-center pt-5 pb-6">
          <svg class="w-8 h-8 mb-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
          </svg>
          <p class="mb-2 text-sm text-gray-500">
            <span class="font-semibold">Click to upload</span> or drag and drop
          </p>
          <p class="text-xs text-gray-500">SVG, PNG, JPG or GIF (MAX. 800x400px)</p>
        </div>
      </label>
    </div>

  
    <div id="imagePreview" class="hidden mt-4">
      <div class="relative">
        <img id="previewImg" src="" alt="Preview" class="w-full h-48 object-cover rounded-lg border border-gray-300">
        <button 
          type="button" 
          onclick="removeImage()" 
          class="absolute top-2 right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm hover:bg-red-600 transition-colors"
        >
        </button>
        <div class="mt-2 text-sm text-gray-600">
          <span id="fileName"></span> (<span id="fileSize"></span>)
        </div>
      </div>
    </div>
  </div>

  <!-- Other Form Fields -->
  <div class="mb-4">
    <label for="productName" class="block text-sm font-medium text-gray-700 mb-1">Product Name</label>
    <input 
      type="text" 
      id="productName" 
      name="productName"
      class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
      placeholder="Enter product name"
    >
  </div>

  <div class="mb-4">
    <label for="productDescription" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
    <textarea 
      id="productDescription" 
      name="productDescription"
      rows="3"
      class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
      placeholder="Enter product description"
    ></textarea>
  </div>

  <button 
    type="submit" 
    class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200"
  >
    Upload Product
  </button>
</form>

<script>
function previewImage(input) {
  const file = input.files[0];
  const previewContainer = document.getElementById('imagePreview');
  const previewImg = document.getElementById('previewImg');
  const fileName = document.getElementById('fileName');
  const fileSize = document.getElementById('fileSize');

  if (file) {
    const reader = new FileReader();
    
    reader.onload = function(e) {
      previewImg.src = e.target.result;
      fileName.textContent = file.name;
      fileSize.textContent = formatFileSize(file.size);
      previewContainer.classList.remove('hidden');
    };
    
    reader.readAsDataURL(file);
  }
}

function removeImage() {
  const input = document.getElementById('productImage');
  const previewContainer = document.getElementById('imagePreview');
  
  input.value = '';
  previewContainer.classList.add('hidden');
}

function formatFileSize(bytes) {
  if (bytes === 0) return '0 Bytes';
  
  const k = 1024;
  const sizes = ['Bytes', 'KB', 'MB', 'GB'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}


const dropZone = document.querySelector('label[for="productImage"]');

['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
  dropZone.addEventListener(eventName, preventDefaults, false);
});

function preventDefaults(e) {
  e.preventDefault();
  e.stopPropagation();
}

['dragenter', 'dragover'].forEach(eventName => {
  dropZone.addEventListener(eventName, highlight, false);
});

['dragleave', 'drop'].forEach(eventName => {
  dropZone.addEventListener(eventName, unhighlight, false);
});

function highlight(e) {
  dropZone.classList.add('border-blue-500', 'bg-blue-50');
}

function unhighlight(e) {
  dropZone.classList.remove('border-blue-500', 'bg-blue-50');
}

dropZone.addEventListener('drop', handleDrop, false);

function handleDrop(e) {
  const dt = e.dataTransfer;
  const files = dt.files;
  
  document.getElementById('productImage').files = files;
  previewImage(document.getElementById('productImage'));
}
</script>
